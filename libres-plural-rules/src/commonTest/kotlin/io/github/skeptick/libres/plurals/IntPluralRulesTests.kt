package io.github.skeptick.libres.plurals

import kotlin.test.Test
import kotlin.test.assertEquals

class IntPluralRulesTests {

    @Test
    fun testAfPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("af", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("af", 1000000))
    }

    @Test
    fun testAkPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ak", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ak", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ak", 1000000))
    }

    @Test
    fun testAmPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("am", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("am", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("am", 1000000))
    }

    @Test
    fun testAnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("an", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("an", 1000000))
    }

    @Test
    fun testArPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("ar", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ar", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("ar", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 10))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 104))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 105))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 106))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 107))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 108))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 109))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 110))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ar", 1003))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 11))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 12))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 13))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 14))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 15))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 16))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 17))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 18))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 19))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 20))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 21))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 22))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 23))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 24))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 25))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 26))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 111))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ar", 1011))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 101))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 102))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 200))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 201))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 202))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 300))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 301))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 302))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 400))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 401))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 402))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 500))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 501))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 502))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 600))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ar", 1000000))
    }

    @Test
    fun testArsPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("ars", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ars", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("ars", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 10))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 104))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 105))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 106))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 107))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 108))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 109))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 110))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ars", 1003))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 11))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 12))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 13))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 14))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 15))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 16))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 17))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 18))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 19))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 20))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 21))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 22))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 23))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 24))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 25))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 26))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 111))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ars", 1011))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 101))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 102))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 200))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 201))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 202))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 300))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 301))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 302))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 400))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 401))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 402))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 500))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 501))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 502))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 600))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ars", 1000000))
    }

    @Test
    fun testAsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("as", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("as", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("as", 1000000))
    }

    @Test
    fun testAsaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("asa", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("asa", 1000000))
    }

    @Test
    fun testAstPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ast", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ast", 1000000))
    }

    @Test
    fun testAzPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("az", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("az", 1000000))
    }

    @Test
    fun testBalPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bal", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bal", 1000000))
    }

    @Test
    fun testBePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("be", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("be", 1002))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 0))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 5))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 6))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 7))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 8))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 9))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 10))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 11))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 12))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 13))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 14))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 15))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 16))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 17))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 18))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 19))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 100))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 1000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 10000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 100000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("be", 1000000))
    }

    @Test
    fun testBemPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bem", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bem", 1000000))
    }

    @Test
    fun testBezPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bez", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bez", 1000000))
    }

    @Test
    fun testBgPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bg", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bg", 1000000))
    }

    @Test
    fun testBhoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bho", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bho", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bho", 1000000))
    }

    @Test
    fun testBloPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("blo", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("blo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("blo", 1000000))
    }

    @Test
    fun testBmPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bm", 1000000))
    }

    @Test
    fun testBnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bn", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bn", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bn", 1000000))
    }

    @Test
    fun testBoPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bo", 1000000))
    }

    @Test
    fun testBrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("br", 1001))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 2))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 22))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 32))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 42))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 52))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 62))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 82))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 102))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("br", 1002))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 29))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 39))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 49))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("br", 1003))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("br", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("br", 100000))
    }

    @Test
    fun testBrxPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("brx", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("brx", 1000000))
    }

    @Test
    fun testBsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("bs", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("bs", 1002))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("bs", 1000000))
    }

    @Test
    fun testCaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ca", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ca", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ca", 100000))
    }

    @Test
    fun testCePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ce", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ce", 1000000))
    }

    @Test
    fun testCebPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 2))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 3))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 5))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 7))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 8))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 10))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 11))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 12))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 13))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 15))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 17))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 18))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 20))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 100))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 1000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 10000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 100000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ceb", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 104))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ceb", 1004))
    }

    @Test
    fun testCggPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("cgg", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cgg", 1000000))
    }

    @Test
    fun testChrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("chr", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("chr", 1000000))
    }

    @Test
    fun testCkbPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ckb", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ckb", 1000000))
    }

    @Test
    fun testCsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("cs", 1))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("cs", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("cs", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("cs", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cs", 1000000))
    }

    @Test
    fun testCswPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("csw", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("csw", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("csw", 1000000))
    }

    @Test
    fun testCyPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("cy", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("cy", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("cy", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("cy", 3))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("cy", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("cy", 1000000))
    }

    @Test
    fun testDaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("da", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("da", 1000000))
    }

    @Test
    fun testDePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("de", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("de", 1000000))
    }

    @Test
    fun testDoiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("doi", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("doi", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("doi", 1000000))
    }

    @Test
    fun testDsbPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 201))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 301))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 401))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 501))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 601))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 701))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dsb", 1001))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 2))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 102))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 202))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 302))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 402))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 502))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 602))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 702))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("dsb", 1002))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 104))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 203))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 204))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 303))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 304))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 403))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 404))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 503))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 504))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 603))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 604))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 703))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 704))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("dsb", 1003))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dsb", 1000000))
    }

    @Test
    fun testDvPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("dv", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dv", 1000000))
    }

    @Test
    fun testDzPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("dz", 1000000))
    }

    @Test
    fun testEePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ee", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ee", 1000000))
    }

    @Test
    fun testElPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("el", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("el", 1000000))
    }

    @Test
    fun testEnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("en", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("en", 1000000))
    }

    @Test
    fun testEoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("eo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eo", 1000000))
    }

    @Test
    fun testEsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("es", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("es", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("es", 100000))
    }

    @Test
    fun testEtPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("et", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("et", 1000000))
    }

    @Test
    fun testEuPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("eu", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("eu", 1000000))
    }

    @Test
    fun testFaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fa", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fa", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fa", 1000000))
    }

    @Test
    fun testFfPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ff", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ff", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ff", 1000000))
    }

    @Test
    fun testFiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fi", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fi", 1000000))
    }

    @Test
    fun testFilPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 2))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 3))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 5))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 7))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 8))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 10))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 11))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 12))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 13))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 15))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 17))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 18))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 20))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 100))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 1000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 10000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 100000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fil", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 104))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fil", 1004))
    }

    @Test
    fun testFoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fo", 1000000))
    }

    @Test
    fun testFrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fr", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fr", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("fr", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fr", 100000))
    }

    @Test
    fun testFurPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fur", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fur", 1000000))
    }

    @Test
    fun testFyPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("fy", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("fy", 1000000))
    }

    @Test
    fun testGaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ga", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("ga", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ga", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ga", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ga", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ga", 6))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ga", 7))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ga", 8))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ga", 9))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ga", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 21))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ga", 1000000))
    }

    @Test
    fun testGdPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gd", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gd", 11))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gd", 2))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gd", 12))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 10))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 13))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 14))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 15))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 16))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 17))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 18))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gd", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 21))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 27))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 28))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 29))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 30))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 31))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 32))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 33))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 34))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gd", 1000000))
    }

    @Test
    fun testGlPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gl", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gl", 1000000))
    }

    @Test
    fun testGswPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gsw", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gsw", 1000000))
    }

    @Test
    fun testGuPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gu", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gu", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gu", 1000000))
    }

    @Test
    fun testGuwPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("guw", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("guw", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("guw", 1000000))
    }

    @Test
    fun testGvPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 11))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("gv", 1001))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 2))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 12))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 22))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 32))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 42))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 52))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 62))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 72))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 102))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("gv", 1002))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 0))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 20))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 40))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 60))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 80))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 100))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 120))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 140))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 1000))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 10000))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 100000))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("gv", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 103))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("gv", 1003))
    }

    @Test
    fun testHaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ha", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ha", 1000000))
    }

    @Test
    fun testHawPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("haw", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("haw", 1000000))
    }

    @Test
    fun testHePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("he", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("he", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("he", 1000000))
    }

    @Test
    fun testHiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hi", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hi", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hi", 1000000))
    }

    @Test
    fun testHnjPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hnj", 1000000))
    }

    @Test
    fun testHrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hr", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hr", 1002))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hr", 1000000))
    }

    @Test
    fun testHsbPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 201))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 301))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 401))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 501))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 601))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 701))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hsb", 1001))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 2))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 102))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 202))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 302))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 402))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 502))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 602))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 702))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("hsb", 1002))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 104))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 203))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 204))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 303))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 304))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 403))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 404))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 503))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 504))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 603))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 604))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 703))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 704))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("hsb", 1003))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hsb", 1000000))
    }

    @Test
    fun testHuPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hu", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hu", 1000000))
    }

    @Test
    fun testHyPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hy", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("hy", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("hy", 1000000))
    }

    @Test
    fun testIaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ia", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ia", 1000000))
    }

    @Test
    fun testIdPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("id", 1000000))
    }

    @Test
    fun testIgPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ig", 1000000))
    }

    @Test
    fun testIiPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ii", 1000000))
    }

    @Test
    fun testIoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("io", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("io", 1000000))
    }

    @Test
    fun testIsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("is", 1001))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("is", 1000000))
    }

    @Test
    fun testItPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("it", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("it", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("it", 100000))
    }

    @Test
    fun testIuPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("iu", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("iu", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("iu", 1000000))
    }

    @Test
    fun testJaPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ja", 1000000))
    }

    @Test
    fun testJboPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jbo", 1000000))
    }

    @Test
    fun testJgoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("jgo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jgo", 1000000))
    }

    @Test
    fun testJmcPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("jmc", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jmc", 1000000))
    }

    @Test
    fun testJvPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jv", 1000000))
    }

    @Test
    fun testJwPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("jw", 1000000))
    }

    @Test
    fun testKaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ka", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ka", 1000000))
    }

    @Test
    fun testKabPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kab", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kab", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kab", 1000000))
    }

    @Test
    fun testKajPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kaj", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kaj", 1000000))
    }

    @Test
    fun testKcgPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kcg", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kcg", 1000000))
    }

    @Test
    fun testKdePluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kde", 1000000))
    }

    @Test
    fun testKeaPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kea", 1000000))
    }

    @Test
    fun testKkPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kk", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kk", 1000000))
    }

    @Test
    fun testKkjPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kkj", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kkj", 1000000))
    }

    @Test
    fun testKlPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kl", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kl", 1000000))
    }

    @Test
    fun testKmPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("km", 1000000))
    }

    @Test
    fun testKnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kn", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kn", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kn", 1000000))
    }

    @Test
    fun testKoPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ko", 1000000))
    }

    @Test
    fun testKsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ks", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ks", 1000000))
    }

    @Test
    fun testKsbPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ksb", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksb", 1000000))
    }

    @Test
    fun testKshPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("ksh", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ksh", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ksh", 1000000))
    }

    @Test
    fun testKuPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ku", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ku", 1000000))
    }

    @Test
    fun testKwPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("kw", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("kw", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 2))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 22))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 42))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 62))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 82))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 102))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 122))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 142))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 1000))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 10000))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("kw", 100000))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 63))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 83))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 123))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 143))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("kw", 1003))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 21))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 41))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 61))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 81))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 101))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 121))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 141))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 161))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("kw", 1001))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 1004))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("kw", 1000000))
    }

    @Test
    fun testKyPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ky", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ky", 1000000))
    }

    @Test
    fun testLagPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lag", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lag", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lag", 1000000))
    }

    @Test
    fun testLbPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lb", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lb", 1000000))
    }

    @Test
    fun testLgPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lg", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lg", 1000000))
    }

    @Test
    fun testLijPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lij", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lij", 1000000))
    }

    @Test
    fun testLktPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lkt", 1000000))
    }

    @Test
    fun testLldPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lld", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("lld", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lld", 100000))
    }

    @Test
    fun testLnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ln", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ln", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ln", 1000000))
    }

    @Test
    fun testLoPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lo", 1000000))
    }

    @Test
    fun testLtPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lt", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 25))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 26))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 27))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 28))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 29))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("lt", 1002))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 30))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 40))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 50))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 60))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lt", 1000000))
    }

    @Test
    fun testLvPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 0))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 10))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 11))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 12))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 13))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 14))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 15))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 16))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 17))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 18))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 19))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 20))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 30))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 40))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 50))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 60))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 100))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 1000))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 10000))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 100000))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("lv", 1000000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("lv", 1001))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 27))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 28))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 29))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 102))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("lv", 1002))
    }

    @Test
    fun testMasPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mas", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mas", 1000000))
    }

    @Test
    fun testMgPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mg", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mg", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mg", 1000000))
    }

    @Test
    fun testMgoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mgo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mgo", 1000000))
    }

    @Test
    fun testMkPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mk", 1001))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mk", 1000000))
    }

    @Test
    fun testMlPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ml", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ml", 1000000))
    }

    @Test
    fun testMnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mn", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mn", 1000000))
    }

    @Test
    fun testMoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mo", 1))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 0))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 10))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 11))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 12))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 13))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 14))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 15))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 16))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 101))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mo", 1001))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 21))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 27))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 28))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 29))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 30))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 31))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 32))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 33))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 34))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 35))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mo", 1000000))
    }

    @Test
    fun testMrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mr", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mr", 1000000))
    }

    @Test
    fun testMsPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ms", 1000000))
    }

    @Test
    fun testMtPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("mt", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("mt", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 0))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 10))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 104))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 105))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 106))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 107))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 108))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 109))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("mt", 1003))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 11))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 12))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 13))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 14))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 15))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 16))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 17))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 18))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 19))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 111))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 112))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 113))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 114))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 115))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 116))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 117))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("mt", 1011))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 21))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 27))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 28))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 29))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 30))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 31))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 32))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 33))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 34))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 35))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("mt", 1000000))
    }

    @Test
    fun testMyPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("my", 1000000))
    }

    @Test
    fun testNahPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nah", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nah", 1000000))
    }

    @Test
    fun testNaqPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("naq", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("naq", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("naq", 1000000))
    }

    @Test
    fun testNbPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nb", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nb", 1000000))
    }

    @Test
    fun testNdPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nd", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nd", 1000000))
    }

    @Test
    fun testNePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ne", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ne", 1000000))
    }

    @Test
    fun testNlPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nl", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nl", 1000000))
    }

    @Test
    fun testNnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nn", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nn", 1000000))
    }

    @Test
    fun testNnhPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nnh", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nnh", 1000000))
    }

    @Test
    fun testNoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("no", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("no", 1000000))
    }

    @Test
    fun testNqoPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nqo", 1000000))
    }

    @Test
    fun testNrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nr", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nr", 1000000))
    }

    @Test
    fun testNsoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nso", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nso", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nso", 1000000))
    }

    @Test
    fun testNyPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ny", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ny", 1000000))
    }

    @Test
    fun testNynPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("nyn", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("nyn", 1000000))
    }

    @Test
    fun testOmPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("om", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("om", 1000000))
    }

    @Test
    fun testOrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("or", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("or", 1000000))
    }

    @Test
    fun testOsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("os", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("os", 1000000))
    }

    @Test
    fun testOsaPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("osa", 1000000))
    }

    @Test
    fun testPaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pa", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pa", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pa", 1000000))
    }

    @Test
    fun testPapPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pap", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pap", 1000000))
    }

    @Test
    fun testPcmPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pcm", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pcm", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pcm", 1000000))
    }

    @Test
    fun testPlPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pl", 1))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("pl", 1002))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 0))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 5))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 6))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 7))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 8))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 9))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 10))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 11))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 12))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 13))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 14))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 15))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 16))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 17))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 18))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 19))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 100))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 1000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 10000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 100000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pl", 1000000))
    }

    @Test
    fun testPrgPluralForm() {
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 0))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 10))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 11))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 12))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 13))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 14))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 15))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 16))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 17))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 18))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 19))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 20))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 30))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 40))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 50))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 60))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 100))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 1000))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 10000))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 100000))
        assertEquals(PluralForm.Zero, IntPluralRules.getPluralForm("prg", 1000000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("prg", 1001))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 27))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 28))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 29))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 102))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("prg", 1002))
    }

    @Test
    fun testPsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ps", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ps", 1000000))
    }

    @Test
    fun testPtPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pt", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("pt", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("pt", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("pt", 100000))
    }

    @Test
    fun testRmPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("rm", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rm", 1000000))
    }

    @Test
    fun testRoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ro", 1))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 0))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 10))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 11))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 12))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 13))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 14))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 15))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 16))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 101))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ro", 1001))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 21))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 27))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 28))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 29))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 30))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 31))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 32))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 33))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 34))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 35))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ro", 1000000))
    }

    @Test
    fun testRofPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("rof", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rof", 1000000))
    }

    @Test
    fun testRuPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ru", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("ru", 1002))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 0))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 5))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 6))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 7))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 8))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 9))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 10))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 11))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 12))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 13))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 14))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 15))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 16))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 17))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 18))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 19))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 100))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 1000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 10000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 100000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("ru", 1000000))
    }

    @Test
    fun testRwkPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("rwk", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("rwk", 1000000))
    }

    @Test
    fun testSahPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sah", 1000000))
    }

    @Test
    fun testSaqPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("saq", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("saq", 1000000))
    }

    @Test
    fun testSatPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sat", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sat", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sat", 1000000))
    }

    @Test
    fun testScPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sc", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sc", 1000000))
    }

    @Test
    fun testScnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("scn", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("scn", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("scn", 100000))
    }

    @Test
    fun testSdPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sd", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sd", 1000000))
    }

    @Test
    fun testSdhPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sdh", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sdh", 1000000))
    }

    @Test
    fun testSePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("se", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("se", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("se", 1000000))
    }

    @Test
    fun testSehPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("seh", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("seh", 1000000))
    }

    @Test
    fun testSesPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ses", 1000000))
    }

    @Test
    fun testSgPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sg", 1000000))
    }

    @Test
    fun testShPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sh", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sh", 1002))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sh", 1000000))
    }

    @Test
    fun testShiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("shi", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("shi", 1))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 5))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 6))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 7))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 8))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 9))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("shi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 20))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 21))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 22))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 23))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 25))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("shi", 1000000))
    }

    @Test
    fun testSiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("si", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("si", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("si", 1000000))
    }

    @Test
    fun testSkPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sk", 1))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sk", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sk", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sk", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sk", 1000000))
    }

    @Test
    fun testSlPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 201))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 301))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 401))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 501))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 601))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 701))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sl", 1001))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 2))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 102))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 202))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 302))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 402))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 502))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 602))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 702))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sl", 1002))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 103))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 104))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 203))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 204))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 303))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 304))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 403))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 404))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 503))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 504))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 603))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 604))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 703))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 704))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sl", 1003))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sl", 1000000))
    }

    @Test
    fun testSmaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sma", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sma", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sma", 1000000))
    }

    @Test
    fun testSmiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("smi", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("smi", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smi", 1000000))
    }

    @Test
    fun testSmjPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("smj", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("smj", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smj", 1000000))
    }

    @Test
    fun testSmnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("smn", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("smn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("smn", 1000000))
    }

    @Test
    fun testSmsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sms", 1))
        assertEquals(PluralForm.Two, IntPluralRules.getPluralForm("sms", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sms", 1000000))
    }

    @Test
    fun testSnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sn", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sn", 1000000))
    }

    @Test
    fun testSoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("so", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("so", 1000000))
    }

    @Test
    fun testSqPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sq", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sq", 1000000))
    }

    @Test
    fun testSrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sr", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("sr", 1002))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 18))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sr", 1000000))
    }

    @Test
    fun testSsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ss", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ss", 1000000))
    }

    @Test
    fun testSsyPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ssy", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ssy", 1000000))
    }

    @Test
    fun testStPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("st", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("st", 1000000))
    }

    @Test
    fun testSuPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("su", 1000000))
    }

    @Test
    fun testSvPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sv", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sv", 1000000))
    }

    @Test
    fun testSwPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("sw", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("sw", 1000000))
    }

    @Test
    fun testSyrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("syr", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("syr", 1000000))
    }

    @Test
    fun testTaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ta", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ta", 1000000))
    }

    @Test
    fun testTePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("te", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("te", 1000000))
    }

    @Test
    fun testTeoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("teo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("teo", 1000000))
    }

    @Test
    fun testThPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("th", 1000000))
    }

    @Test
    fun testTiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ti", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ti", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ti", 1000000))
    }

    @Test
    fun testTigPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tig", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tig", 1000000))
    }

    @Test
    fun testTkPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tk", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tk", 1000000))
    }

    @Test
    fun testTlPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 2))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 3))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 5))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 7))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 8))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 10))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 11))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 12))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 13))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 15))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 17))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 18))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 20))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 100))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 1000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 10000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 100000))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tl", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 19))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 26))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 104))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tl", 1004))
    }

    @Test
    fun testTnPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tn", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tn", 1000000))
    }

    @Test
    fun testToPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("to", 1000000))
    }

    @Test
    fun testTpiPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tpi", 1000000))
    }

    @Test
    fun testTrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tr", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tr", 1000000))
    }

    @Test
    fun testTsPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ts", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ts", 1000000))
    }

    @Test
    fun testTzmPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 11))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 12))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 13))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 14))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 15))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 16))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 17))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 18))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 19))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 20))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 22))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 23))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("tzm", 24))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 101))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 102))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 103))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 104))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 105))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 106))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("tzm", 1000000))
    }

    @Test
    fun testUgPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ug", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ug", 1000000))
    }

    @Test
    fun testUkPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 1))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 21))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 31))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 41))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 51))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 61))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 71))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 81))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 101))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uk", 1001))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 2))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 3))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 4))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 22))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 23))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 24))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 32))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 33))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 34))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 42))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 43))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 44))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 52))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 53))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 54))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 62))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 102))
        assertEquals(PluralForm.Few, IntPluralRules.getPluralForm("uk", 1002))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 0))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 5))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 6))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 7))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 8))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 9))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 10))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 11))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 12))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 13))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 14))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 15))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 16))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 17))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 18))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 19))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 100))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 1000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 10000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 100000))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("uk", 1000000))
    }

    @Test
    fun testUndPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("und", 1000000))
    }

    @Test
    fun testUrPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ur", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ur", 1000000))
    }

    @Test
    fun testUzPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("uz", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("uz", 1000000))
    }

    @Test
    fun testVePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("ve", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("ve", 1000000))
    }

    @Test
    fun testVecPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("vec", 1))
        assertEquals(PluralForm.Many, IntPluralRules.getPluralForm("vec", 1000000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vec", 100000))
    }

    @Test
    fun testViPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vi", 1000000))
    }

    @Test
    fun testVoPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("vo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vo", 1000000))
    }

    @Test
    fun testVunPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("vun", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("vun", 1000000))
    }

    @Test
    fun testWaPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("wa", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("wa", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wa", 1000000))
    }

    @Test
    fun testWaePluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("wae", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wae", 1000000))
    }

    @Test
    fun testWoPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("wo", 1000000))
    }

    @Test
    fun testXhPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("xh", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xh", 1000000))
    }

    @Test
    fun testXogPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("xog", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("xog", 1000000))
    }

    @Test
    fun testYiPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("yi", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yi", 1000000))
    }

    @Test
    fun testYoPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yo", 1000000))
    }

    @Test
    fun testYuePluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("yue", 1000000))
    }

    @Test
    fun testZhPluralForm() {
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 0))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zh", 1000000))
    }

    @Test
    fun testZuPluralForm() {
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("zu", 0))
        assertEquals(PluralForm.One, IntPluralRules.getPluralForm("zu", 1))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 2))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 3))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 4))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 5))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 6))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 7))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 8))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 9))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 10))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 11))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 12))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 13))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 14))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 15))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 16))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 17))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 100))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 1000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 10000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 100000))
        assertEquals(PluralForm.Other, IntPluralRules.getPluralForm("zu", 1000000))
    }

}
